(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{585:function(e,n,t){"use strict";t.r(n);var a=t(13),r=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"输入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输入"}},[e._v("#")]),e._v(" 输入")]),e._v(" "),t("p",[e._v("常用的输入函数包括"),t("code",[e._v("ReadKey")]),e._v("、"),t("code",[e._v("ReadLine")])]),e._v(" "),t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("/**\n * @brief 从键盘获取一个字符\n * @return 一个对象，描述按下的Unicode字符\n */\nConsole.ReadKey();\n\n\n/**\n * @brief 从键盘获取字符串\n * @return 输入的字符串值\n */\nConsole.ReadLine();\n")])])]),t("h1",{attrs:{id:"输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[e._v("#")]),e._v(" 输出")]),e._v(" "),t("p",[e._v("常用的输出函数包括"),t("code",[e._v("Write")]),e._v("、"),t("code",[e._v("WriteLine")])]),e._v(" "),t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("/**\n * @brief 在控制台打印字符串\n * @param format 待打印的字符串\n */\nConsole.Write(format);\n\n\n/**\n * @brief 在控制台打印字符串，自动在结尾添加换行符\n * @param format 待打印的字符串\n */\nConsole.WriteLine(format);\n")])])]),t("p",[e._v("在输出较为复杂的字符串时，"),t("code",[e._v("C#")]),e._v("允许我们使用"),t("code",[e._v("字符串拼接")]),e._v("、"),t("code",[e._v("格式化字符")]),e._v("、"),t("code",[e._v("值代替")]),e._v("等方法显示字符串")]),e._v(" "),t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('int i, j, k;\ni = 0;\nj = 1;\nk = 2;\n\n// 打印 i, j, k\nConsole.WriteLine("[i]" + i + "; [j]" + j + "; [k]" + k);\nConsole.WriteLine("[i]{0}; [j]{1}; [k]{2}", i, j, k);\nConsole.WriteLine($"{i};{j};{k}");\n')])])])])}),[],!1,null,null,null);n.default=r.exports}}]);