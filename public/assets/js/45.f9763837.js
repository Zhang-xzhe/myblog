(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{609:function(t,a,s){"use strict";s.r(a);var n=s(13),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"uart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uart"}},[t._v("#")]),t._v(" UART")]),t._v(" "),s("h3",{attrs:{id:"基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[t._v("#")]),t._v(" 基础知识")]),t._v(" "),s("h5",{attrs:{id:"定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),s("p",[s("code",[t._v("异步串行通信")]),t._v("：通信双方在没有同步时钟的前提下，将一个字符（包括特定的附加位）按位进行传输的通信方式")]),t._v(" "),s("p",[s("code",[t._v("波特率")]),t._v("：每秒钟传输的二进制位数")]),t._v(" "),s("h5",{attrs:{id:"电平转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#电平转换"}},[t._v("#")]),t._v(" 电平转换")]),t._v(" "),s("p",[s("code",[t._v("TTL <——> RS232")]),t._v("：MAX3232、SP3232")]),t._v(" "),s("p",[s("code",[t._v("TTL <——> USB")]),t._v("：CH340、CP2012")]),t._v(" "),s("h5",{attrs:{id:"printf重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#printf重定向"}},[t._v("#")]),t._v(" printf重定向")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//main.c")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdarg.h>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<string.h>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" u_buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//串口数据发送变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_UART_Transmit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UART_HandleTypeDef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("huart1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("u_buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\t\t                                "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sprintf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("u_buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("__VA_ARGS__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n")])])]),s("h3",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @Descript\t阻塞式发送函数\n * @param\t\thuart\t\t\t句柄，用于选择串口\n * @param\t\tpData\t\t\t数据内容\n * @param\t\tSize\t\t\t数据长度（字节）\n * @param \t\tTimeout\t\t\t超时时间设置\n * @return\t\t成功返回HAL_OK\n*/")]),t._v("\nHAL_Status "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_UART_Transmit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UART_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" huart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                             "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                             "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" Size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                             "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" Timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @Descript\t非阻塞式发送函数\n * @param\t\thuart\t\t\t句柄，用于选择串口\n * @param\t\tpData\t\t\t数据内容\n * @param\t\tSize\t\t\t数据长度（字节）\n * @return\t\t成功返回HAL_OK\n*/")]),t._v("\nHAL_Status "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_UART_Transmit_IT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UART_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" huart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                             "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                             "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" Size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @Descript\t非阻塞式发送回调函数\n * @param\t\thuart\t\t\t句柄，用于选择串口\n * @return\t\tvoid\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_UART_TxCpltCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UART_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" huart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @Descript\t阻塞式接收函数\n * @param\t\thuart\t\t\t句柄，用于选择串口\n * @param\t\tpData\t\t\t数据内容\n * @param\t\tSize\t\t\t数据长度（字节）\n * @param \t\tTimeout\t\t\t超时时间设置\n * @return\t\t成功返回HAL_OK\n*/")]),t._v("\nHAL_StatusTypeDef "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_UART_Receive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UART_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" huart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" Size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" Timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @Descript\t非阻塞式接收函数\n * @param\t\thuart\t\t\t句柄，用于选择串口\n * @param\t\tpData\t\t\t数据内容\n * @param\t\tSize\t\t\t数据长度（字节）\n * @return\t\t成功返回HAL_OK\n*/")]),t._v("\nHAL_StatusTypeDef "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_UART_Receive_IT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UART_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" huart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" Size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @Descript\t非阻塞式接收回调函数\n * @param\t\thuart\t\t\t句柄，用于选择串口\n * @return\t\tvoid\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_UART_RxCpltCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UART_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" huart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"demo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("点击左侧的Connectivity，选择串口")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2021/12/20/GONpew8qWPBK64u.png",alt:"image-20211220171601531"}})])]),t._v(" "),s("li",[s("p",[t._v("选择模式")]),t._v(" "),s("p",[t._v("![image-20210907001929966]("),s("img",{attrs:{src:"https://s2.loli.net/2021/12/20/GONpew8qWPBK64u.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("Asynchronous")]),t._v("：异步")]),t._v(" "),s("p",[s("code",[t._v("Synchronous")]),t._v("：同步")])]),t._v(" "),s("li",[s("p",[t._v("点击 NVIC Settings，使能串口")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2021/12/20/LZxYN6k2nJrIP4O.png",alt:"image-20211220171614456"}})])]),t._v(" "),s("li",[s("p",[t._v("点击 Parameter Settings，设置相应参数")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2021/12/20/w36F4sxdHJROb9r.png",alt:"image-20211220171624418"}})])]),t._v(" "),s("li",[s("p",[t._v("在主函数中重写函数")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_UART_RxCpltCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UART_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" huart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("huart"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("Instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" USARTx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" USART1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//what you want to do")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...    ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("一个接受（或发送）语句只能接受（或发送）一次")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_UART_Receive_IT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("huartx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);