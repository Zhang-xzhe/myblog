(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{597:function(t,n,s){"use strict";s.r(n);var a=s(13),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("ul",[s("li",[s("strong",[t._v("通信流程")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2021/12/24/eQgm41COnKabisA.png",alt:"image-20211224222107947"}})]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("相关函数")])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\nFunction: socket\nDescription: 构建usocket对象\nInput:\n\t  @af  AF_INET(IPV4)、AF_INET6(IPV6)\n\t  @type  SCOK_STREAM(TCP)、SOCK_DGRAM(UDP)\n\t  @proto  IPPROTO_TCP(TCP协议)、IPPROTO_UDP(UDP协议)\n\t  @不输入任何参数时默认TCP连接\nOutput:\n      @s  构造的usocket对象\t\t\n'''")]),t._v("\ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" usocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("socket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("af "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AF_INET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SCOK_STREAM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" proto "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IPPROTO_TCP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\nFunction: connect\nDescription: 创建连接\nInput: \n\t  @address  要连接的地址，格式: (IP, 端口号)\nOutput:\n      @r  True(已连接)、False(未连接)\n'''")]),t._v("\nr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\nFunction: send\nDescription: 发送\nInput:\n      @data  要发送的数据，格式为字节\nOutput:\n      @len  已发送的字节数\n'''")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\nFunction: recv\nDescription: 接收数据\nInput:\n      @bufsize  单次最多接收的字节数\nOutput:\n      @data  接收到的数据，格式为字节\n'''")]),t._v("\ndata "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("recv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bufsize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("示例代码")])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\nTarget: 连接地址为Server_address、端口号为Server_port的服务器\nAuthor: Redns\nDate: 2021/5/22 \n'''")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" network"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" usocket\n\nwl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" network"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WLAN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("network"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("STA_IF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("active"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#服务器和ESP32应在同一个局域网下，否则无法通信")]),t._v("\nwl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connected"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'My_WiFiName'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'My_Password'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在WIFI连接完毕前不能连接socket")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" wl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isconnected"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建usocket对象并连接")]),t._v("\ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" usocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("socket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Server_address'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Server_port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#向服务器发送数据")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I am client!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#接收来自服务器的数据")]),t._v("\ndata "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("recv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);