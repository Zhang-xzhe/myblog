(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{600:function(t,a,s){"use strict";s.r(a);var n=s(13),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[t._v("#")]),t._v(" 基础知识")]),t._v(" "),s("h5",{attrs:{id:"adc分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adc分类"}},[t._v("#")]),t._v(" ADC分类")]),t._v(" "),s("ul",[s("li",[t._v("逐次逼近型")]),t._v(" "),s("li",[t._v("双积分型")]),t._v(" "),s("li",[t._v("Sigma-Delta型")])]),t._v(" "),s("h5",{attrs:{id:"技术指标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#技术指标"}},[t._v("#")]),t._v(" 技术指标")]),t._v(" "),s("p",[s("code",[t._v("量程")]),t._v("：指ADC所能输入模拟信号的类型和电压范围，即参考电压")]),t._v(" "),s("p",[s("code",[t._v("转换位数")]),t._v("：量化过程中的量化位数 n")]),t._v(" "),s("p",[s("code",[t._v("分辨率")]),t._v("：ADC 能够分辨的模拟信号最小变化量，分辨率 = 量程 / 2^n")]),t._v(" "),s("p",[s("code",[t._v("转换时间")]),t._v("：ADC完成一次完整的A/D转换所需要的时间，包括采样、保持、量化、编码的全过程")]),t._v(" "),s("h5",{attrs:{id:"板载adc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#板载adc"}},[t._v("#")]),t._v(" 板载ADC")]),t._v(" "),s("ul",[s("li",[t._v("12位逐次逼近型，可测量"),s("code",[t._v("内、外信号源")])]),t._v(" "),s("li",[t._v("各个通道的 A/D 转换可以"),s("code",[t._v("单次、连续、扫描或间断模式")]),t._v("执行")]),t._v(" "),s("li",[t._v("ADC的模拟输入通道分为"),s("code",[t._v("规则组")]),t._v("和"),s("code",[t._v("注入组")]),t._v("两种")]),t._v(" "),s("li",[t._v("A/D转换结果有两种存储方式："),s("code",[t._v("左对齐")]),t._v("和"),s("code",[t._v("右对齐")])])]),t._v(" "),s("h3",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @Descript\t\t\t阻塞式ADC开启函数\n * @param\t\thadc\t句柄，用于选择ADC\n * @return\t\t\t\t成功返回HAL_OK\n*/")]),t._v("\nHAL_StatusTypeDef \t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_ADC_Start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ADC_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" hadc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @Descript\t\t\t非阻塞式ADC开启函数\n * @param\t\thadc\t句柄，用于选择ADC\n * @return\t\t\t\t成功返回HAL_OK\n*/")]),t._v("\nHAL_StatusTypeDef \t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_ADC_Start_IT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ADC_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" hadc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @Descript\t\t\t\t阻塞式ADC转换函数\n * @param\t\thadc\t\t句柄，用于选择ADC\n * @param\t\tTimeout\t\t超时时间\n * @return\t\t\t\t\t成功返回HAL_OK\n*/")]),t._v("\nHAL_StatusTypeDef \t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_ADC_PollForConversion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ADC_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" hadc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" Timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @Descript\t\t\tADC采样值读取函数\n * @param\t\thadc\t句柄，用于选择ADC\n * @return\t\t\t\t采样值\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" \t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_ADC_GetValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ADC_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" hadc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * @Descript\t\t\t非阻塞式ADC回调函数\n * @param\t\thadc\t句柄，用于选择ADC\n * @return\t\tvoid\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" \t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_ADC_ConvCpltCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ADC_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" hadc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"demo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在 STM32Cube 中设置相关管脚")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2021/12/20/69uXIMsYkxhPbR5.png",alt:"image-20211220174916682"}})])]),t._v(" "),s("li",[s("p",[t._v("选择左侧 Analog，进行配置")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2021/12/20/OFiusWPZhgTLxw8.png",alt:"image-20211220175016885"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"Image/image-20210907180927488.png",alt:"image-20210907180927488"}})]),t._v(" "),s("p",[s("code",[t._v("Disable")]),t._v("：失能")]),t._v(" "),s("p",[s("code",[t._v("Differential")]),t._v("：差分输入")]),t._v(" "),s("p",[s("code",[t._v("Single-ended")]),t._v("：单端输入")])]),t._v(" "),s("li",[s("p",[t._v("在 Parameter Settings 中设置具体参数")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2021/12/20/63COwQUk5lcSRbV.png",alt:"image-20211220175028532"}})]),t._v(" "),s("p",[s("code",[t._v("Data Alignment")]),t._v("：数据对齐方式")])]),t._v(" "),s("li",[s("p",[t._v("在NVIC Settings中使能ADC")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2021/12/20/ItAac8EZMQ6oxlw.png",alt:"image-20211220175037832"}})])]),t._v(" "),s("li",[s("p",[t._v("配置时钟树时注意 ADC 时钟")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2021/12/20/1WJKGosZahp7UVk.png",alt:"image-20211220175048958"}})])]),t._v(" "),s("li",[s("p",[t._v("阻塞式 ADC")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ADCx_Get_Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打开对应的ADC")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_ADC_Start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("huartx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断ADC转换是否完成")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_ADC_PollForConversion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("hadcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" HAL_OK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//读取采样值")]),t._v("\n        ADC_value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_ADC_GetValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("hadcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将采样值转换为电压 (voltage = value * 分辨率)")]),t._v("\n        ADC_voltage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ADC_value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3300")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("非阻塞式")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打开ADC")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_ADC_Start_IT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("huartx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//复写回调函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_ADC_ConvCpltCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ADC_HandleTypeDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" hadc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hadc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("Instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ADCx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            ADC_value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_ADC_GetValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("hadcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            ADC_voltage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ADC_value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3300")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...    ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);