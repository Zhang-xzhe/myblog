(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{588:function(t,e,a){"use strict";a.r(e);var n=a(13),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_1-匹配字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-匹配字符串"}},[t._v("#")]),t._v(" 1 匹配字符串")]),t._v(" "),a("p",[t._v("正则表达式的符号主要分为"),a("code",[t._v("元字符")]),t._v("和"),a("code",[t._v("表示重复的字符")]),t._v("，分别如下表所示")]),t._v(" "),a("p",[t._v("==元字符==")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(".")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("除换行符以外所有字符，若要匹配“.”需要使用转义")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("\\w")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字母、数字、下画线")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("\\s")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("空白符（空格）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("\\d")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("数字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("^")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表达式的开始")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("$")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("匹配表达式的结束")])])])]),t._v(" "),a("p",[t._v("==表示重复的字符==")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("*")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("≥ 0 个")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("？")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("0 ~ 1 个")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("+")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("≥1 个")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("{n}")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("n 个")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("{n, M}")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("n ~ M 个")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("{n, }")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("≥ n 个")])])])]),t._v(" "),a("br"),t._v(" "),a("h1",{attrs:{id:"_2-匹配函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-匹配函数"}},[t._v("#")]),t._v(" 2 匹配函数")]),t._v(" "),a("p",[t._v("正则匹配使用了"),a("code",[t._v("Regex类")]),t._v("中的"),a("code",[t._v("IsMatch方法")])]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @不可缺少！且双引号内的字符仍然转义！")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Regex")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Regex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^what you want$"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstring str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("IsMatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// xxx    ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);